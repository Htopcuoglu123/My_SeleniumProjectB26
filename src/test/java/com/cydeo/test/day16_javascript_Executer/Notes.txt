
--- ACTIONS ---

Actions class in Selenium:

- Actions class is used for advanced mouse and keyboard actions using Selenium
- Like double click, hover over an element, right click, drag drop, etc
- Press keyUp or keyDown on the keyboard etc.

When doing test automation, at some steps, we will need to perform advanced actions to simulate user.

How to use Actions class?

   #1 -> Create object of Actions class and pass the driver to constructor
      Actions actions = new Actions(driver);

   #2 -> call the required method or methods for a particular webelement or in general

   #3 -> add perform() or build().perform() at the end


Some actions we can do using Actions class:

Actions actions = new Actions(driver);

Hover over and element:

actions.moveToElement(elem).perform();

Click and hold action:

actions.clickAndHold(elem).perform()

actions.dragAndDrop().perform()

actions.doubleClick().perform()

actions.contextClick().perform()


----------------------------------------------------------------------





--- JavascriptExecutor ---

Q: What is it?
- It is a simple interface coming from Selenium library that allows us to inject(pass) JavaScript methods(functions) into our Java-Selenium code.

Q: Why do we need it?
- Because JavaScript is a very strong web-development programming language.
- Therefore it is useful to be able to pass JavaScript code in our Java-Selenium code in certain situations.

Q: How do we use JavascriptExecutor?
1- We need to downcast our driver type to JavascriptExecutor interface
2- Now we can use the methods coming from JavascriptExecutor
3- We pass our Javascript methods into .executeScript method which will apply it in our driver session.


P.I.Q:

Q: How many ways do you know how to scroll?

#1-  window.scroll()  method with JSExecutor to scroll certain number of pixels.

    First cast the driver to JavaScriptExecutor interface
    JavaScriptExecutor js = (JavaScriptExecutor)driver;

    Then run window.scrollBy(0, 1000) command using executeScript method.

    Scroll down 1000 pixels
    JavaScriptExecutor js = (JavaScriptExecutor)driver;
    js.executeScript("window.scrollBy(0, 1000)");

    Scroll up 1000 pixels
    JavaScriptExecutor js = (JavaScriptExecutor)driver;
    js.executeScript("window.scrollBy(0, -1000)");


#2- arguments[0].scrollIntoView(true) --> JavaScript method which scrolls until element is visible.
#3- PageUp, and PageDown keys using keyboard actions.
#4- We can use the moveToElement() method from Actions class to scroll to certain web element

